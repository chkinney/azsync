name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check formatting
        run: >-
          cargo fmt
          --
          --check

  cargo-deny:
    name: cargo-deny (${{ matrix.checks }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v2
        with:
          command: check ${{ matrix.checks }}
    continue-on-error: ${{ matrix.checks == 'advisories' }}

  test:
    name: Test (${{ matrix.target }})
    needs:
      - fmt
      - cargo-deny
    runs-on: ${{ matrix.target }}
    strategy:
      fail-fast: true
      matrix:
        target: [windows-latest, ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: >-
          cargo test
          --locked
          --verbose

  clippy:
    name: Clippy
    needs:
      - fmt
      - cargo-deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@clippy
      - name: Run clippy
        run: >-
          cargo clippy
          --tests
